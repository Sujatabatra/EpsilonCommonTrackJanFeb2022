DECLARE
    v_empId number:= :id;
BEGIN
   delete from employees
   where employee_id=v_empId;
   IF SQL%FOUND THEN
     DBMS_OUTPUT.PUT_LINE('Employee Deleted Succesfully');
   ELSE
     DBMS_OUTPUT.PUT_LINE('Employee Deletion FAILED');
   END IF;
END;
===================================================================================================
DECLARE
     --declaration of cursor
     CURSOR deptt_emp_cur IS SELECT * from employees where department_id=50;

     empRec employees%ROWTYPE;
BEGIN
     -- open cursor
     OPEN deptt_emp_cur;
     LOOP
        --fetch the result
        FETCH deptt_emp_cur into empRec;
        --check if cursor have more records
        EXIT WHEN deptt_emp_cur%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE('employee id : '|| empRec.employee_id||' , Employee Name : '||empRec.first_name);
     END LOOP;
     --close cursor
     CLOSE deptt_emp_cur;
END;
======================================================================================================
DECLARE
     --declaration of cursor
     CURSOR deptt_emp_cur IS SELECT * from employees where department_id=50;

     --empRec employees%ROWTYPE;
BEGIN
     
     FOR v_rec IN deptt_emp_cur
     LOOP
         DBMS_OUTPUT.PUT_LINE('employee id : '|| v_rec.employee_id||' , Employee Name : '||v_rec.first_name);
     END LOOP;
     
END;
====================================================================================================
DECLARE
     --declaration of cursor
     CURSOR deptt_emp_cur(p_deptt number) IS SELECT * from employees where department_id=p_deptt;

     --empRec employees%ROWTYPE;
BEGIN
     
     FOR v_rec IN deptt_emp_cur(30)
     LOOP
         DBMS_OUTPUT.PUT_LINE('employee id : '|| v_rec.employee_id||' , Employee Name : '||v_rec.first_name);
     END LOOP;
     
END;
==============================================================================================
DECLARE
    -- creating type ref cursor
    TYPE emp_type IS REF CURSOR RETURN employees%ROWTYPE;
    
    c_emp emp_type;  -- variable of type reference cursor
    v_emp employees%ROWTYPE;
BEGIN
     OPEN c_emp FOR select * from employees where department_id=20;
     LOOP
          FETCH c_emp into v_emp;
          EXIT WHEN c_emp%NOTFOUND;
          DBMS_OUTPUT.PUT_LINE(v_emp.first_name);
     END LOOP;
     CLOSE c_emp;
END;
=========================================================================================
DECLARE
    -- creating type ref cursor
    TYPE emp_type IS REF CURSOR RETURN employees%ROWTYPE;
    
    c_emp emp_type;  -- variable of type reference cursor
    v_emp employees%ROWTYPE;
BEGIN
     OPEN c_emp FOR select * from employees where department_id=20;
     LOOP
          FETCH c_emp into v_emp;
          EXIT WHEN c_emp%NOTFOUND;
          DBMS_OUTPUT.PUT_LINE(v_emp.first_name);
     END LOOP;
     CLOSE c_emp;
     DBMS_OUTPUT.PUT_LINE('=================');
     OPEN c_emp FOR select * from employees where manager_id=101;
     LOOP
          FETCH c_emp into v_emp;
          EXIT WHEN c_emp%NOTFOUND;
          DBMS_OUTPUT.PUT_LINE(v_emp.first_name);
     END LOOP;
     CLOSE c_emp;
END;
==========================================================================================
CREATE OR REPLACE PROCEDURE CheckComission
IS
     v_commission number;
BEGIN
     select commission_pct into v_commission from employees where employee_id=101; 
       IF v_commission IS NULL 
       THEN
           RAISE_application_error(-20000,'No Commision Earned....');
       ELSE
           DBMS_OUTPUT.PUT_LINE('Comission Earned : '||v_commission);
       END IF;
END;

---------------------------------------------------------
BEGIN
CheckComission;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('SOMETHING WENT WRONG');
END;
---------------------------------------------------------
DECLARE
    commission_exception EXCEPTION;
    PRAGMA EXCEPTION_INIT(commission_exception,-20000);
BEGIN
    CheckComission;
EXCEPTION
    WHEN commission_exception THEN
       DBMS_OUTPUT.PUT_LINE('No Commission Earned By The Employee');
END;
===================================================================================