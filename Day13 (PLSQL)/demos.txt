CREATE OR REPLACE PROCEDURE EMP_PROC(DEPTT IN EMPLOYEES.DEPARTMENT_ID%TYPE)
IS
    --VARIABLE DECLARATION
    sum_salary NUMBER;
BEGIN
    SELECT SUM(SALARY) INTO sum_salary
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID=DEPTT;
    DBMS_OUTPUT.PUT_LINE('TOTAL SALARY DISTRIBUTED TO DEPARTMENT'||DEPTT||' : '|| sum_salary);

EXCEPTION
    WHEN NO_DATA_FOUND THEN
          DBMS_OUTPUT.PUT_LINE('DEPARTMENT ID '||DEPTT||' DOES NOT EXIST');
END EMP_PROC;
-------------------------
BEGIN
   EMP_PROC(20);
END;
===========================================================================================================

CREATE OR REPLACE PROCEDURE GET_EMP(ID IN EMPLOYEES.EMPLOYEE_ID%TYPE,NAME OUT EMPLOYEES.FIRST_NAME%TYPE,SAL OUT EMPLOYEES.SALARY%TYPE)
IS
    --VARIABLE DECLARATION
    
BEGIN
    SELECT FIRST_NAME,SALARY INTO NAME,SAL
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID=ID;
    DBMS_OUTPUT.PUT_LINE('EMPLOYEE NAME : '||NAME);
    DBMS_OUTPUT.PUT_LINE('EMPLOYEE SALARY : '||SAL);

EXCEPTION
    WHEN NO_DATA_FOUND THEN
          DBMS_OUTPUT.PUT_LINE('EMPLOYEE ID '||ID||' DOES NOT EXIST');
END GET_EMP;

=======================================================================================================
CREATE OR REPLACE FUNCTION EMP_FUNCTION(DEPTT IN EMPLOYEES.DEPARTMENT_ID%TYPE) 
RETURN NUMBER
IS
    --VARIABLE DECLARATION
    sum_salary NUMBER;
BEGIN
    SELECT SUM(SALARY) INTO sum_salary
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID=DEPTT;
    
    RETURN sum_salary;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
          return 0;
END EMP_FUNCTION;